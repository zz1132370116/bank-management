<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.dc.mapper.TransferRecordDOMapper">
    <resultMap id="BaseResultMap" type="com.zl.dc.pojo.TransferRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Aug 13 09:12:09 CST 2019.
        -->
        <id column="transfer_record_id" jdbcType="INTEGER" property="transferRecordId"/>
        <result column="transfer_record_uuid" jdbcType="CHAR" property="transferRecordUuid"/>
        <result column="transfer_record_amount" jdbcType="DECIMAL" property="transferRecordAmount"/>
        <result column="transfer_record_time" jdbcType="TIMESTAMP" property="transferRecordTime"/>
        <result column="transfer_note" jdbcType="VARCHAR" property="transferNote"/>
        <result column="transfer_status" jdbcType="TINYINT" property="transferStatus"/>
        <result column="transfer_type" jdbcType="TINYINT" property="transferType"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="bank_out_card" jdbcType="CHAR" property="bankOutCard"/>
        <result column="in_card_user_name" jdbcType="VARCHAR" property="inCardUserName"/>
        <result column="bank_in_identification" jdbcType="VARCHAR" property="bankInIdentification"/>
        <result column="bank_in_card" jdbcType="CHAR" property="bankInCard"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Base_Column_List">
        transfer_record_id, transfer_record_uuid, transfer_record_amount, transfer_record_time,
        transfer_note, transfer_status, transfer_type, user_id, bank_out_card, in_card_user_name,
        bank_in_identification, bank_in_card, gmt_create, gmt_modified
    </sql>
    <sql id="View_Column_List">
        transfer_record_uuid, transfer_record_amount, transfer_record_time,
        transfer_note, transfer_status, transfer_type,bank_out_card, in_card_user_name,
        bank_in_identification, bank_in_card
    </sql>

    <select id="selectByUserIdAndMonthAndCard" resultMap="BaseResultMap">
        SELECT
        <include refid="View_Column_List"/>
        FROM `transfer_record`
        WHERE user_id = #{userId}
        <if test="bankCard!=''">
            AND bank_out_card = #{bankCard}
        </if>
        AND transfer_record_time BETWEEN #{startDay} AND #{endDay}
        ORDER BY transfer_record_time DESC
        LIMIT #{index},#{limit}
    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from transfer_record
        where transfer_record_id = #{transferRecordId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transfer_record
    where transfer_record_id = #{transferRecordId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.zl.dc.pojo.TransferRecord">
    insert into transfer_record (transfer_record_id, transfer_record_uuid, 
      transfer_record_amount, transfer_record_time, 
      transfer_note, transfer_status, transfer_type, 
      user_id, bank_out_card, in_card_user_name, 
      bank_in_identification, bank_in_card, gmt_create, 
      gmt_modified)
    values (#{transferRecordId,jdbcType=INTEGER}, #{transferRecordUuid,jdbcType=CHAR}, 
      #{transferRecordAmount,jdbcType=DECIMAL}, #{transferRecordTime,jdbcType=TIMESTAMP}, 
      #{transferNote,jdbcType=VARCHAR}, #{transferStatus,jdbcType=TINYINT}, #{transferType,jdbcType=TINYINT}, 
      #{userId,jdbcType=INTEGER}, #{bankOutCard,jdbcType=CHAR}, #{inCardUserName,jdbcType=VARCHAR}, 
      #{bankInIdentification,jdbcType=VARCHAR}, #{bankInCard,jdbcType=CHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.zl.dc.pojo.TransferRecord">
        insert into transfer_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="transferRecordId != null">
                transfer_record_id,
            </if>
            <if test="transferRecordUuid != null">
                transfer_record_uuid,
            </if>
            <if test="transferRecordAmount != null">
                transfer_record_amount,
            </if>
            <if test="transferRecordTime != null">
                transfer_record_time,
            </if>
            <if test="transferNote != null">
                transfer_note,
            </if>
            <if test="transferStatus != null">
                transfer_status,
            </if>
            <if test="transferType != null">
                transfer_type,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="bankOutCard != null">
                bank_out_card,
            </if>
            <if test="inCardUserName != null">
                in_card_user_name,
            </if>
            <if test="bankInIdentification != null">
                bank_in_identification,
            </if>
            <if test="bankInCard != null">
                bank_in_card,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="transferRecordId != null">
                #{transferRecordId,jdbcType=INTEGER},
            </if>
            <if test="transferRecordUuid != null">
                #{transferRecordUuid,jdbcType=CHAR},
            </if>
            <if test="transferRecordAmount != null">
                #{transferRecordAmount,jdbcType=DECIMAL},
            </if>
            <if test="transferRecordTime != null">
                #{transferRecordTime,jdbcType=TIMESTAMP},
            </if>
            <if test="transferNote != null">
                #{transferNote,jdbcType=VARCHAR},
            </if>
            <if test="transferStatus != null">
                #{transferStatus,jdbcType=TINYINT},
            </if>
            <if test="transferType != null">
                #{transferType,jdbcType=TINYINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="bankOutCard != null">
                #{bankOutCard,jdbcType=CHAR},
            </if>
            <if test="inCardUserName != null">
                #{inCardUserName,jdbcType=VARCHAR},
            </if>
            <if test="bankInIdentification != null">
                #{bankInIdentification,jdbcType=VARCHAR},
            </if>
            <if test="bankInCard != null">
                #{bankInCard,jdbcType=CHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zl.dc.pojo.TransferRecord">
        update transfer_record
        <set>
            <if test="transferRecordUuid != null">
                transfer_record_uuid = #{transferRecordUuid,jdbcType=CHAR},
            </if>
            <if test="transferRecordAmount != null">
                transfer_record_amount = #{transferRecordAmount,jdbcType=DECIMAL},
            </if>
            <if test="transferRecordTime != null">
                transfer_record_time = #{transferRecordTime,jdbcType=TIMESTAMP},
            </if>
            <if test="transferNote != null">
                transfer_note = #{transferNote,jdbcType=VARCHAR},
            </if>
            <if test="transferStatus != null">
                transfer_status = #{transferStatus,jdbcType=TINYINT},
            </if>
            <if test="transferType != null">
                transfer_type = #{transferType,jdbcType=TINYINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="bankOutCard != null">
                bank_out_card = #{bankOutCard,jdbcType=CHAR},
            </if>
            <if test="inCardUserName != null">
                in_card_user_name = #{inCardUserName,jdbcType=VARCHAR},
            </if>
            <if test="bankInIdentification != null">
                bank_in_identification = #{bankInIdentification,jdbcType=VARCHAR},
            </if>
            <if test="bankInCard != null">
                bank_in_card = #{bankInCard,jdbcType=CHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where transfer_record_id = #{transferRecordId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zl.dc.pojo.TransferRecord">
    update transfer_record
    set transfer_record_uuid = #{transferRecordUuid,jdbcType=CHAR},
      transfer_record_amount = #{transferRecordAmount,jdbcType=DECIMAL},
      transfer_record_time = #{transferRecordTime,jdbcType=TIMESTAMP},
      transfer_note = #{transferNote,jdbcType=VARCHAR},
      transfer_status = #{transferStatus,jdbcType=TINYINT},
      transfer_type = #{transferType,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      bank_out_card = #{bankOutCard,jdbcType=CHAR},
      in_card_user_name = #{inCardUserName,jdbcType=VARCHAR},
      bank_in_identification = #{bankInIdentification,jdbcType=VARCHAR},
      bank_in_card = #{bankInCard,jdbcType=CHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where transfer_record_id = #{transferRecordId,jdbcType=INTEGER}
  </update>
</mapper>